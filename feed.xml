<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Saumya</title>
    <atom:link href="http://saumya.github.io/ray/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://saumya.github.io/ray</link>
    <description>Where there is a will, there is a way.</description>
    <pubDate>Fri, 24 Jan 2014 05:30:00 +0630</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Always work with Freshers or even younger</title>
      <link>http://saumya.github.io/ray/articles/15/</link>
      <pubDate>Fri, 24 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/15/</guid>
      <author></author>
      <description>&lt;p&gt;It is exciting to work with juniours and if you have never had an experience, try this. Which is highly recommended.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bring new fresh ideas to the table.&lt;/li&gt;
&lt;li&gt;Bring in energy&lt;/li&gt;
&lt;li&gt;New ways of doing things&lt;/li&gt;
&lt;li&gt;Challenge the established&lt;/li&gt;
&lt;li&gt;Go the extra mile to prove it&lt;/li&gt;
&lt;li&gt;Can surprise you by solving something which you never have thought&lt;/li&gt;
&lt;li&gt;Bring in humanity&lt;/li&gt;
&lt;li&gt;Less logical and more intuitional&lt;/li&gt;
&lt;li&gt;Eager to learn
Well, I can go on. But the thing is, you have to be careful. Like all seniours are not helpful, not all young ones have the qualities.&lt;br&gt;If you are a good mentor, then make them conversant with the tools and &lt;code&gt;do not&lt;/code&gt; tell them, &lt;code&gt;how to do&lt;/code&gt;, at first. Ask them &lt;code&gt;what to do ?&lt;/code&gt;, you will be surprised by the result.     &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy Pair-Programming.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Phonegap, jQuery, jQueryMobile and AJAX caching</title>
      <link>http://saumya.github.io/ray/articles/14/</link>
      <pubDate>Thu, 23 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/14/</guid>
      <author></author>
      <description>&lt;p&gt;Developing for a fragmented landscape is not easy. Its even difficult, if you choose to use, a library or framework, which says &lt;code&gt;develop once and run everywhere&lt;/code&gt; or something like &lt;code&gt;it makes your application look like native&lt;/code&gt;.&lt;br&gt;First thing first. With every new release, we have another step addition to test. Contrary to the belief that, the new Operating System is obviously capable of running the old running application, it adds one more fragment to the already fragmented landscape. So if you are a mobile developer, keep this in mind that &lt;code&gt;new OS, is a new test step&lt;/code&gt;. Well, lets add one more device to this equation. Lets just focus on &lt;code&gt;Apple&lt;/code&gt; devices, considering there &lt;code&gt;so called, minimum number of device types&lt;/code&gt;. An iDevice is suppose to run the latest vesion of the iOS. But in the development environment, you might not able to keep up with new device types or OS updates. And only this can break your application. So make sure, you have &lt;code&gt;latest device and latest OS&lt;/code&gt;. Ok, then test your application in this device, chances are your application &lt;code&gt;may run&lt;/code&gt; but chances are &lt;code&gt;it might not&lt;/code&gt; too. So the point is &lt;code&gt;search arround&lt;/code&gt; the internet from the beginning itself, if there are known problems with the exact &lt;code&gt;device and OS&lt;/code&gt; combination.&lt;span class=&quot;more&quot;&gt;           &lt;/p&gt;
&lt;p&gt;Now, just think to add up to more OS, and more devices to the equation. Think of Android and the Windows mobile, you can imagine the complexity.
Ok. Lets add a library to the equation. Now it becomes &lt;code&gt;device + OS + library&lt;/code&gt; and then different vesions of the library. The new versions of the library should run the old running code, but thats an expectation, not reality. So make sure, you have gone through the combined equation search too.&lt;br&gt;&lt;code&gt;And thats the start&lt;/code&gt;&lt;br&gt;Here is &lt;code&gt;just one of many&lt;/code&gt; examples. &lt;a href=&quot;http://cordova.com/&quot;&gt;Phonegap(Cordova)&lt;/a&gt; and &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; together caches the AJAX calls. Now, thats happening in iOS6 for me. But there are evidences that it happens on other  environments too.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12506897/is-safari-on-ios-6-caching-ajax-results&quot;&gt;stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sencha.com/forum/showthread.php?244076-PhoneGap-and-iOS-6-Ajax-calls-weirdness&quot;&gt;sencha&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.einternals.com/blog/web-development/ios6-0-caching-ajax-post-requests&quot;&gt;ios6-0-caching-ajax-post-requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.grobmeier.de/android-does-not-fire-ajax-reqests-because-they-are-caches-ajax-requests-at-least-on-jquery-mobile-10072011.html#.UuE5CBC6bcs&quot;&gt;android issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://community.phonegap.com/nitobi/topics/avoid_android_application_caching_on_ajax_calls_option_cache_false&quot;&gt;phonegap forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It took me sometime to understand, what the problem is?! It was working fine with iOS 4 and 5! Well, here is the tip which solved it. Make the configuraton option of AJAX call in &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;, so that the AJAX call is not cached (else default is cache).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;headers : { &lt;span class=&quot;string&quot;&gt;&quot;cache-control&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt; },&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The complete AJAX call will look somthing like this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;$.ajax({
headers : { &lt;span class=&quot;string&quot;&gt;&quot;cache-control&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt; },
url : &lt;span class=&quot;string&quot;&gt;''&lt;/span&gt;,
success : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(result)&lt;/span&gt; {&lt;/span&gt;}
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is a &lt;a href=&quot;http://www.einternals.com/blog/web-development/ios6-0-caching-ajax-post-requests&quot;&gt;nice write up about how&lt;/a&gt; you configure &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; AJAX call, so that they are not cached.     &lt;/p&gt;
&lt;p&gt;Keep an eye and check serously for at leat these     &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Operating system update&lt;/li&gt;
&lt;li&gt;Have not tested on this device before &lt;/li&gt;
&lt;li&gt;use of particualr library and frameworks (and the problem they bring)&lt;/li&gt;
&lt;li&gt;used library does not update to the new OS&lt;/li&gt;
&lt;li&gt;used library does not support this device
It goes on and on. The matter of fact is, you can not ignore testing it in all the devices and OSs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy fixing.      &lt;/p&gt;
</description>
    </item>
    <item>
      <title>Author details on Wintersmith</title>
      <link>http://saumya.github.io/ray/articles/13/</link>
      <pubDate>Wed, 22 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/13/</guid>
      <author></author>
      <description>&lt;p&gt;This is probably exciting and why I moved, to &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt;. Part of the blogging itself, is learning the engine and the &lt;a href=&quot;http://jade-lang.com/&quot;&gt;Jade template engine&lt;/a&gt;.      &lt;/p&gt;
&lt;p&gt;Here is a tip to configure the author name.      &lt;/p&gt;
&lt;p&gt;With every blog post, there is an author name, below the title, which reads as “written by author”. This comes from the blog itself as you probably know already. Thats fine and thats the default behaviour. If one needs to change it and which could be changed, here is the thing.      &lt;/p&gt;
&lt;p&gt;The details are populated from the &lt;code&gt;authors&lt;/code&gt; folder. The &lt;code&gt;author&lt;/code&gt; name specified in the blog meta data,ie; the top section, when writing the blog, is mapped to a file with the &lt;code&gt;same name as author&lt;/code&gt;. So the file name is &lt;code&gt;author.json&lt;/code&gt; in the &lt;code&gt;authors&lt;/code&gt; folder, where &lt;code&gt;author&lt;/code&gt; is specified in the blog meta-data. If it finds the file, then the &lt;code&gt;author name&lt;/code&gt; below the &lt;code&gt;title&lt;/code&gt; of the post is updated with the new data from the file and an email link is attached with it which is also taken from the &lt;code&gt;.json&lt;/code&gt; file. This is interesting, if it does not find the file, simply the autor name from the blog meta data, is put out in the blog, without the email link.      &lt;/p&gt;
&lt;p&gt;Happy hacking.      &lt;/p&gt;
</description>
    </item>
    <item>
      <title>Experience with Parse</title>
      <link>http://saumya.github.io/ray/articles/12/</link>
      <pubDate>Tue, 21 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/12/</guid>
      <author></author>
      <description>&lt;p&gt;This is the &lt;code&gt;first time&lt;/code&gt;, I worked with &lt;a href=&quot;https://parse.com/&quot;&gt;Parse&lt;/a&gt; and must say its a nice to have tool for any web developer. &lt;a href=&quot;https://parse.com/&quot;&gt;Parse&lt;/a&gt; minimises the task a lot in terms of backend and hosting.&lt;br&gt;&lt;a href=&quot;https://parse.com/&quot;&gt;Parse&lt;/a&gt; has a lot of options to choose from and one can choose to use the only required ones.&lt;br&gt;Well, I started of with hosting only, for one of my &lt;a href=&quot;http://facebook.com/&quot;&gt;Facebook&lt;/a&gt; applications. They even have a SDK to integrate the &lt;a href=&quot;http://facebook.com/&quot;&gt;Facebook&lt;/a&gt; SDK with them. I have not yet implemented their SDK yet, but docs show its simplicity of use.&lt;br&gt;I have started working on a &lt;a href=&quot;http://backbonejs.org/&quot;&gt;BackboneJS&lt;/a&gt; application integrating &lt;a href=&quot;http://facebook.com/&quot;&gt;Facebook&lt;/a&gt; and hosting in &lt;a href=&quot;https://parse.com/&quot;&gt;Parse&lt;/a&gt;. That went quite smooth. Actually &lt;a href=&quot;https://parse.com/&quot;&gt;Parse&lt;/a&gt; &lt;code&gt;has extended&lt;/code&gt; &lt;a href=&quot;http://backbonejs.org/&quot;&gt;BackboneJS&lt;/a&gt; to provide another SDK of their own to create frontend applications.&lt;br&gt;Happy coding.      &lt;/p&gt;
</description>
    </item>
    <item>
      <title>BackboneJS, view and its events</title>
      <link>http://saumya.github.io/ray/articles/11/</link>
      <pubDate>Mon, 20 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/11/</guid>
      <author></author>
      <description>&lt;p&gt;Working in &lt;a href=&quot;http://backbonejs.org/&quot;&gt;BackboneJS&lt;/a&gt; is fun and easy to begin with. Slowly but steadily it gets complicated as we move on and add more to the project. Being said that, &lt;a href=&quot;http://backbonejs.org/&quot;&gt;BackboneJS&lt;/a&gt; is not at all opinionated. So there is no rightway of doing something. If your solution works for your project, then its good to go. Well, then there are certain things, which may help you, better organise your code. One of such things is &lt;code&gt;View Events&lt;/code&gt;.&lt;br&gt;In a Backbone view, to listen to events and handle them, the general syntax is as this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;events:{
        &lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;onClick&quot;&lt;/span&gt;
        },
onClick: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(event)&lt;/span&gt;{&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//Do something with the event&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//or&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//specifically do it for a target&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; btnID = event.target.id;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(btnID===&lt;span class=&quot;string&quot;&gt;'btn_one'&lt;/span&gt;){
        console.log(&lt;span class=&quot;string&quot;&gt;'TODO:'&lt;/span&gt;);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, it may be easier at first, but we are listening for events for the whole view and then in the handler checking it. There is a way in &lt;a href=&quot;http://backbonejs.org/&quot;&gt;BackboneJS&lt;/a&gt; that directly and listens for events for that particular target. The code looks as this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;events:{
        &lt;span class=&quot;string&quot;&gt;&quot;click #btn_one&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;onClick&quot;&lt;/span&gt;
        },
onClick: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(event)&lt;/span&gt;{&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//btn_one is clicked&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//Do something with the event&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Happy coding.      &lt;/p&gt;
</description>
    </item>
    <item>
      <title>Distribute iOS app on your web site</title>
      <link>http://saumya.github.io/ray/articles/10/</link>
      <pubDate>Wed, 15 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/10/</guid>
      <author></author>
      <description>&lt;p&gt;Its not that difficult as it sounds.&lt;br&gt;First of all, there are distribution services out there. I am not going to name them here, but they are available. A simple web search will show you that. 
Now, the question is, how do they do it, or the more significant question is, can we do it ourselves. The answer is yes.
There are 3 basic things required for distribution.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.ipa file ( iOS app )&lt;/li&gt;
&lt;li&gt;.plist file ( manifest file for the app )&lt;/li&gt;
&lt;li&gt;.html file ( html file for showing the link to the user )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The iOS app must be compiled with the Ad-HOC distribution certificate with the device(where the app will be installed) UDIDs included. Thats the same procedure, as one would follow, while distributing through other stores. Once its compiled, you say &lt;code&gt;Archive for distribution&lt;/code&gt; in XCode, which will create the &lt;code&gt;.ipa&lt;/code&gt; file. The manifest file defines the application meta data, if you go through the manifest file below, there is a place to point to the &lt;code&gt;.ipa&lt;/code&gt; file, make sure, you provide &lt;code&gt;full URL to .ipa&lt;/code&gt; file. The download link on HTML file will point to this manifest file. Here is the boilerplate for a typical manifest file (which is a .plist file). The HTML file, is simply  having a link pointing to the &lt;code&gt;.plist&lt;/code&gt; file.     &lt;/p&gt;
&lt;p&gt;&lt;script src=&quot;https://gist.github.com/saumya/8440357.js&quot;&gt;&lt;/script&gt;&lt;br&gt;Now simply link to the plist file in the HTML file as below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;a href=&amp;quot;itms-services://?action=download-manifest&amp;amp;url=https://myServer/iOS-dist/iOSAppDist.plist&amp;quot; class=&amp;quot;button&amp;quot;&amp;gt;Install My App&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now visit the URL through iPhone, where your HTML file is stored. Once you click the link, it will download and install the iOS app.&lt;/p&gt;
&lt;p&gt;Happy hacking.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>HTML5, requestAnimationFrame</title>
      <link>http://saumya.github.io/ray/articles/9/</link>
      <pubDate>Tue, 14 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/9/</guid>
      <author></author>
      <description>&lt;p&gt;Making a javascript application, at somepoint, involves use of &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; functions. Well, the possibility increases even more, when one needs to animate elements. So we know what it means to use these two functions.&lt;br&gt;Fortunately we have a new method, called &lt;code&gt;requestAnimationFrame()&lt;/code&gt;, which is elegant and effective. Now animations will not eat up mobile battery life, but still be smooth. This is optimised to takecare of the host environment, such as mobile browser, desktop browser etc. It even minimises the repeat call, if the application using it, is not visible or scrolled out of view, sweet.&lt;br&gt;&lt;a href=&quot;http://caniuse.com/requestanimationframe&quot;&gt;Check, which browsers and versions support this function,&lt;/a&gt; just to make yourself clear.&lt;br&gt;Here are few links which explain &lt;code&gt;requestAnimationFrame&lt;/code&gt; function in more detail.    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/window.requestAnimationFrame&quot;&gt;mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/&quot;&gt;Paul Irish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://creativejs.com/resources/requestanimationframe/&quot;&gt;Creative JS&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Its kind of &lt;code&gt;saying bye bye&lt;/code&gt; to &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;.&lt;br&gt;Happy Animating.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Native Android development and getting Key Hash for Facebook</title>
      <link>http://saumya.github.io/ray/articles/8/</link>
      <pubDate>Mon, 13 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/8/</guid>
      <author></author>
      <description>&lt;p&gt;If you are developing for native Android, and creating a Facebook login, then the fist thing which will come to you, is a setting on Facebook console called “Key Hashes”.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/p&gt;
&lt;p&gt;While trying to do the Facebook suggested way, I lost some time and could not really get it working perfectly. Searching the internet told me that people had been in that path and that the solution is not working. Well, then I got a script to get the hash key. Finally this worked for me, all the time. So quickly I wrapped it in a function and put it here for anyone trying to fight the “key hash”.    &lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/saumya/8399013.js&quot;&gt;&lt;/script&gt;    

&lt;p&gt;Now, all that remains is, put this function on the first activity of your Android project and call the function with your package name as a string arguement on the onCreation method. That will print out the hash key on logCat window. Just copy-paste that code in Facebook console. Then you can remove that call to the function.    &lt;/p&gt;
&lt;p&gt;Happy Hacking ! &lt;/p&gt;
</description>
    </item>
    <item>
      <title>Wintersmith configuration</title>
      <link>http://saumya.github.io/ray/articles/7/</link>
      <pubDate>Sun, 12 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/7/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt; is perfect on creating a static site, but the problem arises when one needs to configure it to meet a particular need. I think, thats true for any framework.&lt;br&gt;The problem I encountered is, putting the static blog in any domain or sub-domain. &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt; generates urls which are default to root &lt;code&gt;/&lt;/code&gt; and to change it to any domain means one has to change it to the domain one wishes to put the site on. Thats as simple as that. Well, for most parts. Then, there are places where it creates a relative URL.    &lt;/p&gt;
&lt;p&gt;To solve this, I looked inside the templates and configuration. &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt; reads from the &lt;code&gt;config.json&lt;/code&gt; file to get the base URL and make the other URLs. So I changed the &lt;code&gt;url&lt;/code&gt; to my desired URL and added another parameter to the &lt;code&gt;locals&lt;/code&gt; object of the &lt;code&gt;config.json&lt;/code&gt; named &lt;code&gt;folder&lt;/code&gt;, Then changed the URL in templates, from &lt;code&gt;/&lt;/code&gt; to &lt;code&gt;locals.url&lt;/code&gt; and at some places to &lt;code&gt;locals.url+&amp;#39;/&amp;#39;+locals.folder&lt;/code&gt; and thats it. Its now perfectly alright to take my site to wherever I want. All I need to do is change these variables and build the site again with &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt; build command.&lt;br&gt;Is this the rightway? Well, seriously I do not know, but it works.   &lt;/p&gt;
&lt;p&gt;Happy Hacking ! &lt;/p&gt;
</description>
    </item>
    <item>
      <title>The technology choice of the blog.</title>
      <link>http://saumya.github.io/ray/articles/6/</link>
      <pubDate>Sat, 11 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/6/</guid>
      <author></author>
      <description>&lt;p&gt;First question to answer is &lt;code&gt;why I moved to a static page solution?&lt;/code&gt;, there are a lot of answers to this.
Here is a nice writeup by David Tucker. &lt;a href=&quot;http://davidtucker.net/articles/move-to-static-site-generator/&quot;&gt;The Need for a Static Site Generator.&lt;/a&gt;&lt;br&gt;Now, since we know a static page site is the need of the time, the technology choice is important too. Obviously the first thing, that comes to mind is &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, yeah, its simple and just works. Being in MAC, its even tempting to use &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, as &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; comes installed with the OS. Further more &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; support is in-built with &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages&quot;&gt;GitHub Pages&lt;/a&gt;. It could have been as simple as that.&lt;br&gt;I choose Javascript as the language of choice, since its exciting now, what we could do with it, so this blog would be one of my playgrounds for the work I do. I have already getting more and more familiar with &lt;a href=&quot;http://jade-lang.com/&quot;&gt;Jade&lt;/a&gt; templating engine and &lt;a href=&quot;http://nodejs.org/&quot;&gt;nodeJS&lt;/a&gt; workflows, &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;wintersmith&lt;/a&gt; is such a nice engine which works on &lt;a href=&quot;http://nodejs.org/&quot;&gt;nodeJS&lt;/a&gt;. Just the matter of time, as how far Javascript has come!   &lt;/p&gt;
&lt;p&gt;Happy Coding&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Finally added Disqus</title>
      <link>http://saumya.github.io/ray/articles/5/</link>
      <pubDate>Sat, 11 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/5/</guid>
      <author></author>
      <description>&lt;p&gt;The final technical integration to &lt;code&gt;make the blog a conversation&lt;/code&gt; engine, is done. Can not imagine how far the blogging has come and how easy now it is to setup things. Yes can feel the new internet now. Remembering the back days, when I created a static HTML page and served through internet. Its a full circle now. Though the generation of the static pages are automated, but the thing is we are back to decentralised internet.&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Its moved to github now.</title>
      <link>http://saumya.github.io/ray/articles/4/</link>
      <pubDate>Fri, 10 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/4/</guid>
      <author></author>
      <description>&lt;p&gt;Do you notice ?! Now this blog is served from Github itself. The publishing was never excicting as this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;How it works?&lt;/code&gt; Git commit and the post is out there.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The wait is over.</title>
      <link>http://saumya.github.io/ray/articles/3/</link>
      <pubDate>Fri, 10 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/3/</guid>
      <author></author>
      <description>&lt;p&gt;After a week of searching, studying and re-searching things, finally landed up with this.
Well, there is not much to &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;wintersmith&lt;/a&gt;, it 10 mins job at max if someone has a little experience in NodeJS.The main delay for me was to trying to produce a static site out of my old blog, which was running in &lt;a href=&quot;http://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; eninge.&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Thanking wordpress.</title>
      <link>http://saumya.github.io/ray/articles/2/</link>
      <pubDate>Tue, 07 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/2/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;code&gt;Why?&lt;/code&gt; Thats for being there as a very solid option for blogging.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/p&gt;
&lt;p&gt;Its a pleasure to use &lt;a href=&quot;http://wordpress.com/&quot;&gt;Wordpress&lt;/a&gt; for such along time. In fact its the reason I started into blogging. I have a &lt;a href=&quot;http://saumyaray.wordpress.com/&quot;&gt;Wordpress&lt;/a&gt; hosted blog till now too. 
This blog was using Wordpress as its blogging engine from 2010 and thats a beautiful engine, I must say.&lt;/p&gt;
&lt;p&gt;The reason I moved this to &lt;a href=&quot;https://github.com/jnordberg/wintersmith&quot;&gt;Wintersmith&lt;/a&gt; is, I want to focus on javascript environment now, the same reason was there, with Wordpress. 
I was focusing on PHP and MySql, those days. So its not that Wordpress is bad but seriously speaking Wordpress is now far beyound a blogging platform.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Finally, a static site !</title>
      <link>http://saumya.github.io/ray/articles/1/</link>
      <pubDate>Tue, 07 Jan 2014 05:30:00 +0630</pubDate>
      <guid isPermaLink="true">http://saumya.github.io/ray/articles/1/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;code&gt;Why?&lt;/code&gt; Thats for learning.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;What?&lt;/code&gt; Life. Javascript, NodeJS, Express, Jade, Sass, Grunt and the list goes on.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;It&amp;#39;s learning till the end.&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;so-why-wait-&quot;&gt;So why wait ?!&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube-nocookie.com/embed/nql49wrkURY?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;code&gt;Thank you&lt;/code&gt; so much for stopping by.&lt;/p&gt;
&lt;p&gt;Lets get started.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>